package com.webank.wecross.stub.bcos.performance.hellowecross.proxy;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.Address;
import org.fisco.bcos.sdk.abi.datatypes.DynamicArray;
import org.fisco.bcos.sdk.abi.datatypes.DynamicBytes;
import org.fisco.bcos.sdk.abi.datatypes.Function;
import org.fisco.bcos.sdk.abi.datatypes.Type;
import org.fisco.bcos.sdk.abi.datatypes.Utf8String;
import org.fisco.bcos.sdk.abi.datatypes.generated.Uint256;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple2;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple3;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple4;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple6;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

@SuppressWarnings("unchecked")
public class WeCrossProxy extends Contract {
    public static final String[] BINARY_ARRAY = {
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "5b619f9d87828801619a00565b935050604085013567ffffffffffffffff811115619fba57600080fd5b619fc687828801619a00565b925050606085013567ffffffffffffffff811115619fe357600080fd5b619fef87828801619a00565b91505092959194509250565b60008060008060008060c0878903121561a01457600080fd5b600087013567ffffffffffffffff81111561a02e57600080fd5b61a03a89828a01619a00565b965050602087013567ffffffffffffffff81111561a05757600080fd5b61a06389828a01619a00565b955050604061a07489828a01619aac565b945050606087013567ffffffffffffffff81111561a09157600080fd5b61a09d89828a01619a00565b935050608087013567ffffffffffffffff81111561a0ba57600080fd5b61a0c689828a01619a00565b92505060a087013567ffffffffffffffff81111561a0e357600080fd5b61a0ef89828a01619940565b9150509295509295509295565b6000806040838503121561a10f57600080fd5b600083013567ffffffffffffffff81111561a12957600080fd5b61a13585828601619a00565b925050602061a14685828601619aac565b9150509250929050565b61a1598161a821565b82525050565b600061a16a8261a7e8565b8084526020840193508360208202850161a1838561a7db565b60005b8481101561a1bc57838303885261a19e83835161a239565b925061a1a98261a814565b915060208801975060018101905061a186565b508196508694505050505092915050565b600061a1d88261a7f3565b80845261a1ec81602086016020860161a880565b61a1f58161a8b3565b602085010191505092915050565b600061a20e8261a809565b80845261a22281602086016020860161a880565b61a22b8161a8b3565b602085010191505092915050565b600061a2448261a7fe565b80845261a25881602086016020860161a880565b61a2618161a8b3565b602085010191505092915050565b6000602182527f7861207472616e73616374696f6e20686173206265656e20636f6d6d6974746560208301527f64000000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000602182527f64656c657465206e6f6e6578697374656e74207861207472616e73616374696f60208301527f6e000000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000601682527f6465706c6f7920636f6e7472616374206661696c6564000000000000000000006020830152604082019050919050565b6000601882527f7861207472616e73616374696f6e206e6f7420666f756e6400000000000000006020830152604082019050919050565b6000602182527f7365712073686f756c642062652067726561746572207468616e206265666f7260208301527f65000000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000601d82527f746865206e616d6527732061646472657373206e6f742065786973742e0000006020830152604082019050919050565b6000601f82527f64656c65746520756e6d617463686564207861207472616e73616374696f6e006020830152604082019050919050565b6000602282527f7861207472616e73616374696f6e20686173206265656e20726f6c6c6564626160208301527f636b0000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b61a4c88161a853565b82525050565b600060208201905061a4e3600083018461a150565b92915050565b6000602082019050818103600083015261a503818461a15f565b905092915050565b6000602082019050818103600083015261a525818461a1cd565b905092915050565b6000602082019050818103600083015261a547818461a203565b905092915050565b6000604082019050818103600083015261a569818561a203565b9050818103602083015261a57d818461a203565b90509392505050565b6000608082019050818103600083015261a5a0818761a203565b9050818103602083015261a5b4818661a203565b9050818103604083015261a5c8818561a203565b9050818103606083015261a5dc818461a203565b905095945050505050565b6000602082019050818103600083015261a6008161a26f565b9050919050565b6000602082019050818103600083015261a6208161a2cc565b9050919050565b6000602082019050818103600083015261a6408161a329565b9050919050565b6000602082019050818103600083015261a6608161a360565b9050919050565b6000602082019050818103600083015261a6808161a397565b9050919050565b6000602082019050818103600083015261a6a08161a3f4565b9050919050565b6000602082019050818103600083015261a6c08161a42b565b9050919050565b6000602082019050818103600083015261a6e08161a462565b9050919050565b600060208201905061a6fc600083018461a4bf565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561a72557600080fd5b8060405250919050565b600067ffffffffffffffff82111561a74657600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561a76e57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561a79a57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561a7c657600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600061a82c8261a833565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000819050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561a89e57808201518184015260208101905061a883565b8381111561a8ad576000848401525b50505050565b6000601f19601f830116905091905056fe20697320756e7265676973746572656420696e207861207472616e73616374696f6e20206973206c6f636b656420627920756e66696e6973686564207861207472616e73616374696f6e3a207265736f75726365206973206c6f636b656420627920756e66696e6973686564207861207472616e73616374696f6e3a2020697320756e7265676973746572656420696e207861207472616e73616374696f6e3a20a265627a7a72305820656fbd241b65dbe33dff6544456a0abb6ba586fc6b959a3f5b79567707e56f016c6578706572696d656e74616cf50037"
    };

    public static final String BINARY =
            org.fisco.bcos.sdk.utils.StringUtils.joinAll("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "5b619f9d87828801619a00565b935050604085013567ffffffffffffffff811115619fba57600080fd5b619fc687828801619a00565b925050606085013567ffffffffffffffff811115619fe357600080fd5b619fef87828801619a00565b91505092959194509250565b60008060008060008060c0878903121561a01457600080fd5b600087013567ffffffffffffffff81111561a02e57600080fd5b61a03a89828a01619a00565b965050602087013567ffffffffffffffff81111561a05757600080fd5b61a06389828a01619a00565b955050604061a07489828a01619aac565b945050606087013567ffffffffffffffff81111561a09157600080fd5b61a09d89828a01619a00565b935050608087013567ffffffffffffffff81111561a0ba57600080fd5b61a0c689828a01619a00565b92505060a087013567ffffffffffffffff81111561a0e357600080fd5b61a0ef89828a01619940565b9150509295509295509295565b6000806040838503121561a10f57600080fd5b600083013567ffffffffffffffff81111561a12957600080fd5b61a13585828601619a00565b925050602061a14685828601619aac565b9150509250929050565b61a1598161a821565b82525050565b600061a16a8261a7e8565b8084526020840193508360208202850161a1838561a7db565b60005b8481101561a1bc57838303885261a19e83835161a239565b925061a1a98261a814565b915060208801975060018101905061a186565b508196508694505050505092915050565b600061a1d88261a7f3565b80845261a1ec81602086016020860161a880565b61a1f58161a8b3565b602085010191505092915050565b600061a20e8261a809565b80845261a22281602086016020860161a880565b61a22b8161a8b3565b602085010191505092915050565b600061a2448261a7fe565b80845261a25881602086016020860161a880565b61a2618161a8b3565b602085010191505092915050565b6000601882527f7861207472616e73616374696f6e206e6f7420666f756e6400000000000000006020830152604082019050919050565b6000601d82527f746865206e616d6527732061646472657373206e6f742065786973742e0000006020830152604082019050919050565b6000602182527f64656c657465206e6f6e6578697374656e74207861207472616e73616374696f60208301527f6e000000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000602182527f7861207472616e73616374696f6e20686173206265656e20636f6d6d6974746560208301527f64000000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000602282527f7861207472616e73616374696f6e20686173206265656e20726f6c6c6564626160208301527f636b0000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000601682527f6465706c6f7920636f6e7472616374206661696c6564000000000000000000006020830152604082019050919050565b6000602182527f7365712073686f756c642062652067726561746572207468616e206265666f7260208301527f65000000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000601f82527f64656c65746520756e6d617463686564207861207472616e73616374696f6e006020830152604082019050919050565b61a4c88161a853565b82525050565b600060208201905061a4e3600083018461a150565b92915050565b6000602082019050818103600083015261a503818461a15f565b905092915050565b6000602082019050818103600083015261a525818461a1cd565b905092915050565b6000602082019050818103600083015261a547818461a203565b905092915050565b6000604082019050818103600083015261a569818561a203565b9050818103602083015261a57d818461a203565b90509392505050565b6000608082019050818103600083015261a5a0818761a203565b9050818103602083015261a5b4818661a203565b9050818103604083015261a5c8818561a203565b9050818103606083015261a5dc818461a203565b905095945050505050565b6000602082019050818103600083015261a6008161a26f565b9050919050565b6000602082019050818103600083015261a6208161a2a6565b9050919050565b6000602082019050818103600083015261a6408161a2dd565b9050919050565b6000602082019050818103600083015261a6608161a33a565b9050919050565b6000602082019050818103600083015261a6808161a397565b9050919050565b6000602082019050818103600083015261a6a08161a3f4565b9050919050565b6000602082019050818103600083015261a6c08161a42b565b9050919050565b6000602082019050818103600083015261a6e08161a488565b9050919050565b600060208201905061a6fc600083018461a4bf565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561a72557600080fd5b8060405250919050565b600067ffffffffffffffff82111561a74657600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561a76e57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561a79a57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561a7c657600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600061a82c8261a833565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000819050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561a89e57808201518184015260208101905061a883565b8381111561a8ad576000848401525b50505050565b6000601f19601f830116905091905056fe7265736f75726365206973206c6f636b656420627920756e66696e6973686564207861207472616e73616374696f6e3a20206973206c6f636b656420627920756e66696e6973686564207861207472616e73616374696f6e3a2020697320756e7265676973746572656420696e207861207472616e73616374696f6e2020697320756e7265676973746572656420696e207861207472616e73616374696f6e3a20a265627a7a723058209dedbde1c9f945f7ac085f01742bcc9d45330400080a9243bda0d8a9d7bc200e6c6578706572696d656e74616cf50037"
    };

    public static final String SM_BINARY =
            org.fisco.bcos.sdk.utils.StringUtils.joinAll("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {
        "[{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"string\"},{\"name\":\"_version\",\"type\":\"string\"},{\"name\":\"_bin\",\"type\":\"bytes\"},{\"name\":\"_abi\",\"type\":\"string\"}],\"name\":\"deployContractWithRegisterCNS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_argsWithMethodId\",\"type\":\"bytes\"}],\"name\":\"constantCall\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPaths\",\"outputs\":[{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_xaTransactionID\",\"type\":\"string\"},{\"name\":\"_selfPaths\",\"type\":\"string[]\"},{\"name\":\"_otherPaths\",\"type\":\"string[]\"}],\"name\":\"startXATransaction\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_xaTransactionID\",\"type\":\"string\"}],\"name\":\"commitXATransaction\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_xaTransactionID\",\"type\":\"string\"}],\"name\":\"getXATransaction\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getXATransactionNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_xaTransactionID\",\"type\":\"string\"}],\"name\":\"rollbackAndDeleteXATransactionTask\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"string\"},{\"name\":\"_size\",\"type\":\"uint256\"}],\"name\":\"listXATransactions\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"string\"},{\"name\":\"_version\",\"type\":\"string\"},{\"name\":\"_addr\",\"type\":\"string\"},{\"name\":\"_abi\",\"type\":\"string\"}],\"name\":\"registerCNS\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_xaTransactionID\",\"type\":\"string\"}],\"name\":\"rollbackXATransaction\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bin\",\"type\":\"bytes\"}],\"name\":\"deployContract\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"selectByName\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_version\",\"type\":\"string\"}],\"name\":\"selectByNameAndVersion\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_uid\",\"type\":\"string\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_argsWithMethodId\",\"type\":\"bytes\"}],\"name\":\"sendTransaction\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_str\",\"type\":\"string\"}],\"name\":\"stringToUint256\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_XATransactionID\",\"type\":\"string\"},{\"name\":\"_path\",\"type\":\"string\"},{\"name\":\"_func\",\"type\":\"string\"},{\"name\":\"_args\",\"type\":\"bytes\"}],\"name\":\"constantCall\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_path\",\"type\":\"string\"}],\"name\":\"getXATransactionState\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"string\"}],\"name\":\"addPath\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_uid\",\"type\":\"string\"},{\"name\":\"_XATransactionID\",\"type\":\"string\"},{\"name\":\"_XATransactionSeq\",\"type\":\"uint256\"},{\"name\":\"_path\",\"type\":\"string\"},{\"name\":\"_func\",\"type\":\"string\"},{\"name\":\"_args\",\"type\":\"bytes\"}],\"name\":\"sendTransaction\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLatestXATransactionID\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLatestXATransaction\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deletePathList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]"
    };

    public static final String ABI = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", ABI_ARRAY);

    public static final String FUNC_DEPLOYCONTRACTWITHREGISTERCNS = "deployContractWithRegisterCNS";

    public static final String FUNC_GETVERSION = "getVersion";

    public static final String FUNC_CONSTANTCALL = "constantCall";

    public static final String FUNC_GETPATHS = "getPaths";

    public static final String FUNC_STARTXATRANSACTION = "startXATransaction";

    public static final String FUNC_COMMITXATRANSACTION = "commitXATransaction";

    public static final String FUNC_GETXATRANSACTION = "getXATransaction";

    public static final String FUNC_GETXATRANSACTIONNUMBER = "getXATransactionNumber";

    public static final String FUNC_ROLLBACKANDDELETEXATRANSACTIONTASK =
            "rollbackAndDeleteXATransactionTask";

    public static final String FUNC_LISTXATRANSACTIONS = "listXATransactions";

    public static final String FUNC_REGISTERCNS = "registerCNS";

    public static final String FUNC_ROLLBACKXATRANSACTION = "rollbackXATransaction";

    public static final String FUNC_DEPLOYCONTRACT = "deployContract";

    public static final String FUNC_SELECTBYNAME = "selectByName";

    public static final String FUNC_SELECTBYNAMEANDVERSION = "selectByNameAndVersion";

    public static final String FUNC_SENDTRANSACTION = "sendTransaction";

    public static final String FUNC_STRINGTOUINT256 = "stringToUint256";

    public static final String FUNC_GETXATRANSACTIONSTATE = "getXATransactionState";

    public static final String FUNC_ADDPATH = "addPath";

    public static final String FUNC_GETLATESTXATRANSACTIONID = "getLatestXATransactionID";

    public static final String FUNC_GETLATESTXATRANSACTION = "getLatestXATransaction";

    public static final String FUNC_DELETEPATHLIST = "deletePathList";

    protected WeCrossProxy(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public TransactionReceipt deployContractWithRegisterCNS(
            String _path, String _version, byte[] _bin, String _abi) {
        final Function function =
                new Function(
                        FUNC_DEPLOYCONTRACTWITHREGISTERCNS,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_version),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(_bin),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_abi)),
                        Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] deployContractWithRegisterCNS(
            String _path, String _version, byte[] _bin, String _abi, TransactionCallback callback) {
        final Function function =
                new Function(
                        FUNC_DEPLOYCONTRACTWITHREGISTERCNS,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_version),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(_bin),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_abi)),
                        Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForDeployContractWithRegisterCNS(
            String _path, String _version, byte[] _bin, String _abi) {
        final Function function =
                new Function(
                        FUNC_DEPLOYCONTRACTWITHREGISTERCNS,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_version),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(_bin),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_abi)),
                        Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple4<String, String, byte[], String> getDeployContractWithRegisterCNSInput(
            TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function =
                new Function(
                        FUNC_DEPLOYCONTRACTWITHREGISTERCNS,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(
                                new TypeReference<Utf8String>() {},
                                new TypeReference<Utf8String>() {},
                                new TypeReference<DynamicBytes>() {},
                                new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple4<String, String, byte[], String>(
                (String) results.get(0).getValue(),
                (String) results.get(1).getValue(),
                (byte[]) results.get(2).getValue(),
                (String) results.get(3).getValue());
    }

    public Tuple1<String> getDeployContractWithRegisterCNSOutput(
            TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function =
                new Function(
                        FUNC_DEPLOYCONTRACTWITHREGISTERCNS,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>((String) results.get(0).getValue());
    }

    public String getVersion() throws ContractException {
        final Function function =
                new Function(
                        FUNC_GETVERSION,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt constantCall(String _name, byte[] _argsWithMethodId) {
        final Function function =
                new Function(
                        FUNC_CONSTANTCALL,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_name),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(
                                        _argsWithMethodId)),
                        Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] constantCall(
            String _name, byte[] _argsWithMethodId, TransactionCallback callback) {
        final Function function =
                new Function(
                        FUNC_CONSTANTCALL,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_name),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(
                                        _argsWithMethodId)),
                        Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForConstantCall(String _name, byte[] _argsWithMethodId) {
        final Function function =
                new Function(
                        FUNC_CONSTANTCALL,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_name),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(
                                        _argsWithMethodId)),
                        Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, byte[]> getConstantCallStringBytesInput(
            TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function =
                new Function(
                        FUNC_CONSTANTCALL,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(
                                new TypeReference<Utf8String>() {},
                                new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, byte[]>(
                (String) results.get(0).getValue(), (byte[]) results.get(1).getValue());
    }

    public Tuple1<byte[]> getConstantCallStringBytesOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function =
                new Function(
                        FUNC_CONSTANTCALL,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<byte[]>((byte[]) results.get(0).getValue());
    }

    public List getPaths() throws ContractException {
        final Function function =
                new Function(
                        FUNC_GETPATHS,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(
                                new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> result = (List<Type>) executeCallWithSingleValueReturn(function, List.class);
        return convertToNative(result);
    }

    public TransactionReceipt startXATransaction(
            String _xaTransactionID, List<String> _selfPaths, List<String> _otherPaths) {
        final Function function =
                new Function(
                        FUNC_STARTXATRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_xaTransactionID),
                                _selfPaths.isEmpty()
                                        ? org.fisco.bcos.sdk.abi.datatypes.DynamicArray.empty(
                                                "string[]")
                                        : new org.fisco.bcos.sdk.abi.datatypes.DynamicArray<
                                                org.fisco.bcos.sdk.abi.datatypes.Utf8String>(
                                                org.fisco.bcos.sdk.abi.Utils.typeMap(
                                                        _selfPaths,
                                                        org.fisco.bcos.sdk.abi.datatypes.Utf8String
                                                                .class)),
                                _otherPaths.isEmpty()
                                        ? org.fisco.bcos.sdk.abi.datatypes.DynamicArray.empty(
                                                "string[]")
                                        : new org.fisco.bcos.sdk.abi.datatypes.DynamicArray<
                                                org.fisco.bcos.sdk.abi.datatypes.Utf8String>(
                                                org.fisco.bcos.sdk.abi.Utils.typeMap(
                                                        _otherPaths,
                                                        org.fisco.bcos.sdk.abi.datatypes.Utf8String
                                                                .class))),
                        Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] startXATransaction(
            String _xaTransactionID,
            List<String> _selfPaths,
            List<String> _otherPaths,
            TransactionCallback callback) {
        final Function function =
                new Function(
                        FUNC_STARTXATRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_xaTransactionID),
                                _selfPaths.isEmpty()
                                        ? org.fisco.bcos.sdk.abi.datatypes.DynamicArray.empty(
                                                "string[]")
                                        : new org.fisco.bcos.sdk.abi.datatypes.DynamicArray<
                                                org.fisco.bcos.sdk.abi.datatypes.Utf8String>(
                                                org.fisco.bcos.sdk.abi.Utils.typeMap(
                                                        _selfPaths,
                                                        org.fisco.bcos.sdk.abi.datatypes.Utf8String
                                                                .class)),
                                _otherPaths.isEmpty()
                                        ? org.fisco.bcos.sdk.abi.datatypes.DynamicArray.empty(
                                                "string[]")
                                        : new org.fisco.bcos.sdk.abi.datatypes.DynamicArray<
                                                org.fisco.bcos.sdk.abi.datatypes.Utf8String>(
                                                org.fisco.bcos.sdk.abi.Utils.typeMap(
                                                        _otherPaths,
                                                        org.fisco.bcos.sdk.abi.datatypes.Utf8String
                                                                .class))),
                        Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForStartXATransaction(
            String _xaTransactionID, List<String> _selfPaths, List<String> _otherPaths) {
        final Function function =
                new Function(
                        FUNC_STARTXATRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_xaTransactionID),
                                _selfPaths.isEmpty()
                                        ? org.fisco.bcos.sdk.abi.datatypes.DynamicArray.empty(
                                                "string[]")
                                        : new org.fisco.bcos.sdk.abi.datatypes.DynamicArray<
                                                org.fisco.bcos.sdk.abi.datatypes.Utf8String>(
                                                org.fisco.bcos.sdk.abi.Utils.typeMap(
                                                        _selfPaths,
                                                        org.fisco.bcos.sdk.abi.datatypes.Utf8String
                                                                .class)),
                                _otherPaths.isEmpty()
                                        ? org.fisco.bcos.sdk.abi.datatypes.DynamicArray.empty(
                                                "string[]")
                                        : new org.fisco.bcos.sdk.abi.datatypes.DynamicArray<
                                                org.fisco.bcos.sdk.abi.datatypes.Utf8String>(
                                                org.fisco.bcos.sdk.abi.Utils.typeMap(
                                                        _otherPaths,
                                                        org.fisco.bcos.sdk.abi.datatypes.Utf8String
                                                                .class))),
                        Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, List<String>, List<String>> getStartXATransactionInput(
            TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function =
                new Function(
                        FUNC_STARTXATRANSACTION,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(
                                new TypeReference<Utf8String>() {},
                                new TypeReference<DynamicArray<Utf8String>>() {},
                                new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, List<String>, List<String>>(
                (String) results.get(0).getValue(),
                convertToNative((List<Utf8String>) results.get(1).getValue()),
                convertToNative((List<Utf8String>) results.get(2).getValue()));
    }

    public Tuple1<String> getStartXATransactionOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function =
                new Function(
                        FUNC_STARTXATRANSACTION,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>((String) results.get(0).getValue());
    }

    public TransactionReceipt commitXATransaction(String _xaTransactionID) {
        final Function function =
                new Function(
                        FUNC_COMMITXATRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_xaTransactionID)),
                        Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] commitXATransaction(String _xaTransactionID, TransactionCallback callback) {
        final Function function =
                new Function(
                        FUNC_COMMITXATRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_xaTransactionID)),
                        Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForCommitXATransaction(String _xaTransactionID) {
        final Function function =
                new Function(
                        FUNC_COMMITXATRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_xaTransactionID)),
                        Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getCommitXATransactionInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function =
                new Function(
                        FUNC_COMMITXATRANSACTION,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>((String) results.get(0).getValue());
    }

    public Tuple1<String> getCommitXATransactionOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function =
                new Function(
                        FUNC_COMMITXATRANSACTION,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>((String) results.get(0).getValue());
    }

    public String getXATransaction(String _xaTransactionID) throws ContractException {
        final Function function =
                new Function(
                        FUNC_GETXATRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_xaTransactionID)),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public String getXATransactionNumber() throws ContractException {
        final Function function =
                new Function(
                        FUNC_GETXATRANSACTIONNUMBER,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt rollbackAndDeleteXATransactionTask(String _xaTransactionID) {
        final Function function =
                new Function(
                        FUNC_ROLLBACKANDDELETEXATRANSACTIONTASK,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_xaTransactionID)),
                        Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] rollbackAndDeleteXATransactionTask(
            String _xaTransactionID, TransactionCallback callback) {
        final Function function =
                new Function(
                        FUNC_ROLLBACKANDDELETEXATRANSACTIONTASK,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_xaTransactionID)),
                        Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForRollbackAndDeleteXATransactionTask(
            String _xaTransactionID) {
        final Function function =
                new Function(
                        FUNC_ROLLBACKANDDELETEXATRANSACTIONTASK,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_xaTransactionID)),
                        Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getRollbackAndDeleteXATransactionTaskInput(
            TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function =
                new Function(
                        FUNC_ROLLBACKANDDELETEXATRANSACTIONTASK,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>((String) results.get(0).getValue());
    }

    public Tuple1<String> getRollbackAndDeleteXATransactionTaskOutput(
            TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function =
                new Function(
                        FUNC_ROLLBACKANDDELETEXATRANSACTIONTASK,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>((String) results.get(0).getValue());
    }

    public String listXATransactions(String _index, BigInteger _size) throws ContractException {
        final Function function =
                new Function(
                        FUNC_LISTXATRANSACTIONS,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_index),
                                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(_size)),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt registerCNS(
            String _path, String _version, String _addr, String _abi) {
        final Function function =
                new Function(
                        FUNC_REGISTERCNS,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_version),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_addr),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_abi)),
                        Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] registerCNS(
            String _path,
            String _version,
            String _addr,
            String _abi,
            TransactionCallback callback) {
        final Function function =
                new Function(
                        FUNC_REGISTERCNS,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_version),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_addr),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_abi)),
                        Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForRegisterCNS(
            String _path, String _version, String _addr, String _abi) {
        final Function function =
                new Function(
                        FUNC_REGISTERCNS,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_version),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_addr),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_abi)),
                        Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple4<String, String, String, String> getRegisterCNSInput(
            TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function =
                new Function(
                        FUNC_REGISTERCNS,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(
                                new TypeReference<Utf8String>() {},
                                new TypeReference<Utf8String>() {},
                                new TypeReference<Utf8String>() {},
                                new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple4<String, String, String, String>(
                (String) results.get(0).getValue(),
                (String) results.get(1).getValue(),
                (String) results.get(2).getValue(),
                (String) results.get(3).getValue());
    }

    public TransactionReceipt rollbackXATransaction(String _xaTransactionID) {
        final Function function =
                new Function(
                        FUNC_ROLLBACKXATRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_xaTransactionID)),
                        Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] rollbackXATransaction(String _xaTransactionID, TransactionCallback callback) {
        final Function function =
                new Function(
                        FUNC_ROLLBACKXATRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_xaTransactionID)),
                        Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForRollbackXATransaction(String _xaTransactionID) {
        final Function function =
                new Function(
                        FUNC_ROLLBACKXATRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_xaTransactionID)),
                        Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getRollbackXATransactionInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function =
                new Function(
                        FUNC_ROLLBACKXATRANSACTION,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>((String) results.get(0).getValue());
    }

    public Tuple1<String> getRollbackXATransactionOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function =
                new Function(
                        FUNC_ROLLBACKXATRANSACTION,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>((String) results.get(0).getValue());
    }

    public TransactionReceipt deployContract(byte[] _bin) {
        final Function function =
                new Function(
                        FUNC_DEPLOYCONTRACT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(_bin)),
                        Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] deployContract(byte[] _bin, TransactionCallback callback) {
        final Function function =
                new Function(
                        FUNC_DEPLOYCONTRACT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(_bin)),
                        Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForDeployContract(byte[] _bin) {
        final Function function =
                new Function(
                        FUNC_DEPLOYCONTRACT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(_bin)),
                        Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<byte[]> getDeployContractInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function =
                new Function(
                        FUNC_DEPLOYCONTRACT,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<byte[]>((byte[]) results.get(0).getValue());
    }

    public Tuple1<String> getDeployContractOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function =
                new Function(
                        FUNC_DEPLOYCONTRACT,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>((String) results.get(0).getValue());
    }

    public String selectByName(String _name) throws ContractException {
        final Function function =
                new Function(
                        FUNC_SELECTBYNAME,
                        Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_name)),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public String selectByNameAndVersion(String _name, String _version) throws ContractException {
        final Function function =
                new Function(
                        FUNC_SELECTBYNAMEANDVERSION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_name),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_version)),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt sendTransaction(String _uid, String _name, byte[] _argsWithMethodId) {
        final Function function =
                new Function(
                        FUNC_SENDTRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_uid),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_name),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(
                                        _argsWithMethodId)),
                        Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] sendTransaction(
            String _uid, String _name, byte[] _argsWithMethodId, TransactionCallback callback) {
        final Function function =
                new Function(
                        FUNC_SENDTRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_uid),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_name),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(
                                        _argsWithMethodId)),
                        Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForSendTransaction(
            String _uid, String _name, byte[] _argsWithMethodId) {
        final Function function =
                new Function(
                        FUNC_SENDTRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_uid),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_name),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(
                                        _argsWithMethodId)),
                        Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, String, byte[]> getSendTransactionStringStringBytesInput(
            TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function =
                new Function(
                        FUNC_SENDTRANSACTION,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(
                                new TypeReference<Utf8String>() {},
                                new TypeReference<Utf8String>() {},
                                new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, String, byte[]>(
                (String) results.get(0).getValue(),
                (String) results.get(1).getValue(),
                (byte[]) results.get(2).getValue());
    }

    public Tuple1<byte[]> getSendTransactionStringStringBytesOutput(
            TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function =
                new Function(
                        FUNC_SENDTRANSACTION,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<byte[]>((byte[]) results.get(0).getValue());
    }

    public BigInteger stringToUint256(String _str) throws ContractException {
        final Function function =
                new Function(
                        FUNC_STRINGTOUINT256,
                        Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_str)),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallWithSingleValueReturn(function, BigInteger.class);
    }

    public TransactionReceipt constantCall(
            String _XATransactionID, String _path, String _func, byte[] _args) {
        final Function function =
                new Function(
                        FUNC_CONSTANTCALL,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_XATransactionID),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_func),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(_args)),
                        Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] constantCall(
            String _XATransactionID,
            String _path,
            String _func,
            byte[] _args,
            TransactionCallback callback) {
        final Function function =
                new Function(
                        FUNC_CONSTANTCALL,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_XATransactionID),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_func),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(_args)),
                        Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForConstantCall(
            String _XATransactionID, String _path, String _func, byte[] _args) {
        final Function function =
                new Function(
                        FUNC_CONSTANTCALL,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_XATransactionID),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_func),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(_args)),
                        Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple4<String, String, String, byte[]> getConstantCallStringStringStringBytesInput(
            TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function =
                new Function(
                        FUNC_CONSTANTCALL,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(
                                new TypeReference<Utf8String>() {},
                                new TypeReference<Utf8String>() {},
                                new TypeReference<Utf8String>() {},
                                new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple4<String, String, String, byte[]>(
                (String) results.get(0).getValue(),
                (String) results.get(1).getValue(),
                (String) results.get(2).getValue(),
                (byte[]) results.get(3).getValue());
    }

    public Tuple1<byte[]> getConstantCallStringStringStringBytesOutput(
            TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function =
                new Function(
                        FUNC_CONSTANTCALL,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<byte[]>((byte[]) results.get(0).getValue());
    }

    public String getXATransactionState(String _path) throws ContractException {
        final Function function =
                new Function(
                        FUNC_GETXATRANSACTIONSTATE,
                        Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path)),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt addPath(String _path) {
        final Function function =
                new Function(
                        FUNC_ADDPATH,
                        Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path)),
                        Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] addPath(String _path, TransactionCallback callback) {
        final Function function =
                new Function(
                        FUNC_ADDPATH,
                        Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path)),
                        Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForAddPath(String _path) {
        final Function function =
                new Function(
                        FUNC_ADDPATH,
                        Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path)),
                        Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getAddPathInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function =
                new Function(
                        FUNC_ADDPATH,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>((String) results.get(0).getValue());
    }

    public TransactionReceipt sendTransaction(
            String _uid,
            String _XATransactionID,
            BigInteger _XATransactionSeq,
            String _path,
            String _func,
            byte[] _args) {
        final Function function =
                new Function(
                        FUNC_SENDTRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_uid),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_XATransactionID),
                                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(
                                        _XATransactionSeq),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_func),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(_args)),
                        Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] sendTransaction(
            String _uid,
            String _XATransactionID,
            BigInteger _XATransactionSeq,
            String _path,
            String _func,
            byte[] _args,
            TransactionCallback callback) {
        final Function function =
                new Function(
                        FUNC_SENDTRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_uid),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_XATransactionID),
                                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(
                                        _XATransactionSeq),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_func),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(_args)),
                        Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForSendTransaction(
            String _uid,
            String _XATransactionID,
            BigInteger _XATransactionSeq,
            String _path,
            String _func,
            byte[] _args) {
        final Function function =
                new Function(
                        FUNC_SENDTRANSACTION,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_uid),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_XATransactionID),
                                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(
                                        _XATransactionSeq),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_path),
                                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_func),
                                new org.fisco.bcos.sdk.abi.datatypes.DynamicBytes(_args)),
                        Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple6<String, String, BigInteger, String, String, byte[]>
            getSendTransactionStringStringUint256StringStringBytesInput(
                    TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function =
                new Function(
                        FUNC_SENDTRANSACTION,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(
                                new TypeReference<Utf8String>() {},
                                new TypeReference<Utf8String>() {},
                                new TypeReference<Uint256>() {},
                                new TypeReference<Utf8String>() {},
                                new TypeReference<Utf8String>() {},
                                new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple6<String, String, BigInteger, String, String, byte[]>(
                (String) results.get(0).getValue(),
                (String) results.get(1).getValue(),
                (BigInteger) results.get(2).getValue(),
                (String) results.get(3).getValue(),
                (String) results.get(4).getValue(),
                (byte[]) results.get(5).getValue());
    }

    public Tuple1<byte[]> getSendTransactionStringStringUint256StringStringBytesOutput(
            TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function =
                new Function(
                        FUNC_SENDTRANSACTION,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<byte[]>((byte[]) results.get(0).getValue());
    }

    public String getLatestXATransactionID() throws ContractException {
        final Function function =
                new Function(
                        FUNC_GETLATESTXATRANSACTIONID,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public String getLatestXATransaction() throws ContractException {
        final Function function =
                new Function(
                        FUNC_GETLATESTXATRANSACTION,
                        Arrays.<Type>asList(),
                        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt deletePathList() {
        final Function function =
                new Function(
                        FUNC_DELETEPATHLIST,
                        Arrays.<Type>asList(),
                        Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] deletePathList(TransactionCallback callback) {
        final Function function =
                new Function(
                        FUNC_DELETEPATHLIST,
                        Arrays.<Type>asList(),
                        Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForDeletePathList() {
        final Function function =
                new Function(
                        FUNC_DELETEPATHLIST,
                        Arrays.<Type>asList(),
                        Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public static WeCrossProxy load(
            String contractAddress, Client client, CryptoKeyPair credential) {
        return new WeCrossProxy(contractAddress, client, credential);
    }

    public static WeCrossProxy deploy(Client client, CryptoKeyPair credential)
            throws ContractException {
        return deploy(
                WeCrossProxy.class, client, credential, getBinary(client.getCryptoSuite()), "");
    }
}
